clc
close all
clear all
format bank 
N=input('Number of nodes: ');
n=N-1;
reg=zeros(n,N);  %a blank matrix
for i=1:n
    for j=1:N
        % now have to input the registance
       if i~=j
           fprintf('what about the node %d%d', i,j);
           r=input('any resistence?=');
        %if the node have registance press y otherwise press n
        if r==y
            fprintf('enter the resistence for %d%d:' ,i,j);
            reg(i,j)=input('value:');
        else
            reg(i,j)=10^7;
        end
       else
           reg(i,j)=10^7;
       end
    end
end
Gj=zeros(n,n);
for i=1:n
    cal=0;
    for j=1:n
        cal=(1/reg(i,j))+cal;
        if j~=n
            Gj(i,j)=-(1/R(i,j));
        else
            continue
        end
    end
    Gj(i,j)=cal;
end
Gj
v=input(' num of voltage sources' );
V=zeros(v,1);
pt=zeros(v,1);             %positive terminal for voltage
nt=zeros(v,t);              %negative terminal for voltage
for j=1:v
    V(j)=input('value of voltage=');
    pt(j)=input('positive terminal for voltage source');
        nt(j)=input('negative terminal for voltage source');
        if pt(j)~=n
            V(j)=V(j);
        else
               V(j)=-V(j);
        end
end
V
A=zeros(n,1);
for j=1:v
    %add=0;
    for i=1:n
        A(i,1)=A(i,1)-(Gj(i,pt(j))*V(j));
    end
end
Gj
d=0;
for j=1:v
    for i=1:n
        if i==pt(j)
            Gj(:,pt(j)-d)=[];
            d=d+1;
        end
    end
end
s=size(Gj);
d=0
for i=1:g(1)
    for j=1:q
        if i==pt(j)
            Gj(pt(j)-d,:)=[];
            d=d+1;
        end
    end
end
Gj
d=0;
for i=1:n
    for j=1:v
        if i==pt(j)
            A(pt(j)-d, :)=[];
            d=d+1;
        end
    end
end
A
B=[Gj A];
h=length(B)-1;
V=zeros(n,1);
C=zeros(1,h+1);
for i=1:h
    if (B(i,1)==0)
        C=B(i ,:);
        B(i, :)=B(i+1 ,:);
        B(i+1, :)=C;
    end
    B(i, :) = (B(i, :)/B(i,1));
    for J= 1:h
        if(j~=i)
            B(j, :)= B(j , :)-(B(j,i)*B(i, :))
        end
    end
end
B
for j=1:v
    V(pt(j))= X(j);
end
d=0;
for i=1:n
    if
            

        
        
    


    
